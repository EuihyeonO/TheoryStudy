

FArchive :

1. 경로 얻기

const FString SavedDir = FPaths::Combine(FPlatformMisc::ProjectDir(), TEXT("폴더이름"));
해당 함수를 통해, 프로젝트의 절대경로 + 세이브 파일을 저장할 폴더 이름을 합쳐서 하나의 주소 문자열을 만들 수 있다.
Ex) 프로젝트의 경로가 C:// 이고, 저장폴더이름을 Saved로 설정했다면 SaveDir은 "C://Saved"가 된다.

여기서 다시, 
const FString FileAbsolutePath = FPaths::Combine(*SavedDir, TEXT("파일 이름")); 을 하게 되면
파일 이름까지 합쳐진 절대경로가 문자열로 완성된다.

다만, 이 주소는 ..//..// 이런 방식으로 작성되는데 읽을 수 있는 문자열(C://Data//Unreal//Saved)로 변환하고 싶다면
FPaths::MakeStandardFilename(FileAbsolutePath); 함수를 사용하면 된다.

2. FArchive 생성

FArchive* FileWriterAr = IFileManager::Get().CreateFileWriter(*RawDataAbsolutePath);
와 같은 방식으로 아카이브 생성 가능하다.
(파일에 쓰기가 아니라 파일에서 데이터를 읽어오는 형식이라면, Writer만 Reader로 바꾸면 된다.)

3-1. 파일에 쓰기

if (nullptr != RawFileWriterAr)
{
	*RawFileWriterAr << Hp;
	*RawFileWriterAr << Level;  <- <<연산자를 이용해 데이터를 파일에 쓴다.
	.
	.
	.

	RawFileWriterAr->Close(); <- 모두 쓰고 나면, Close()를 반드시 해주어야 한다.
			
	delete RawFileWriterAr; <- FArchive는 기본적으로 동적으로 생성되기 때문에 메모리 해제를 해주어야 한다.(언리얼 오브젝트가 아니기 때문에 가비지 콜렉터 작동x)
	RawFileWriterAr = nullptr; <- 댕글링 포인터 방지하기 위해 널포인터 대입.
}

3-2 파일에서 읽어오기

if (nullptr != RawFileReaderAr)
{
	*RawFileReaderAr << Hp;
	*RawFileReaderAr << Level; <- FArchive에서 쓰기와 읽기는 객체명(Writer인가 Reader인가)에 따라 구분되기 때문에 동일하게 << 연산자를 쓰면 됨.

	RawFileReaderAr->Close();

	delete RawFileReaderAr;
	RawFileReaderAr = nullptr;
}

참고로 쉐어드 포인터를 이용하면, delete를 안해줘도 되니까 좀 더 편하다.

콘텍스트 스위칭
: CPU(코어)에서 작업중이던 프로세스/스레드가 교체되는 경우, 기존 프로세스/스레드의 작업 상황을 저장한 뒤 CPU의 레지스터/캐시에 있는 데이터를 새로 작업할 프로세스/스레드의 데이터로 바꾸어야 한다.
이 작업이 가볍지 않기 때문에, 잦은 콘텍스트 스위칭은 오버헤드의 원인이 된다.


스레드 콘텍스트 스위칭
: 동일한 프로세스 내에 존재하는 스레드 간의 콘텍스트 스위칭은 매우 간단하다.
기존의 작업 상황을 저장한 뒤, 새로 작업할 스레드의 작업 상황을 로딩하면 된다.

프로세스 콘텍스트 스위칭
:서로 다른 프로세스 간의 컨텍스트 스위칭은 추가적으로 몇 가지 연산을 해주어야 한다.
-> MMU수정 + TLB 캐시 비우기

MMU란 메모리의 논리적 주소를 물리적 주소로 변환하여 주는 것.
프로세스가 전환되면, MMU의 대상을 새로운 프로세스로 변경해주어야 한다.
MMU내부에는 변환된 주소 정보를 담고있는 cache(TLB)가 있다.
새로운 프로세스로 변경되면, 기존 TLB의 데이터를 비워주어야 한다.

컨텍스트 스위칭이 발생하면 기존 CPU캐시가 오염되기 때문에, 캐시를 옮기는 과정에서 오버헤드가 발생할 수 있다.

프로세스 콘텍스트 스위칭에 비하면 다소 가볍긴 하지만, 오버헤드가 발생한다는 것은 다르지 않다.

스레드를 효율적으로 사용하지 않고 무작정 많이 만들게 되면, 잦은 콘텍스트 스위칭으로 인해 오히려 성능이 저하될 수 있다.
그렇기 때문에 프로그래머는 항상 콘텍스트 스위칭을 염두에 두고 효율적으로 설계해야 한다.




L_Value , R_Value

L은 Left를 의미하고, R은 Right를 의미한다.
단어의 기원은 int A = 3; 과 같은 문장에서
왼쪽에 있는 A와 오른쪽에 있는 3이 성질이 다르기 때문에 이를 구분짓기 위해 L_Value와 R_Value라는 단어가 생긴 것이다.

하지만, 단어 자체의 뜻이 그렇다는 거지 실제로 왼쪽에 있다고 모두 L_Value인 것은 아니고, 오른쪽에 있다고 모두 R_Value인 것은 아니다.

L_Value는 기본적으로, 라인을 벗어나서도 참조가 가능한 값을 의미하며
R_Value는 라인을 벗어나면 참조가 불가능한 값을 의미한다.


int A = 3; 이라는 코드가 실행되고 나서,
다음 줄에서 A = 5, A = 4와 같은 대입 연산을 진행할 수 있지만
3 = 2 , 3 = 0 과 같은 연산은 불가능하다.

오른쪽에 있던 3이라는 값은 어떠한 메모리 주소에 저장되어 연산에 이용되지만, 한 줄의 라인이 지나면 해당 메모리 주소는 유효하지 않은 주소가 되어버린다.
이처럼, 다른 라인에서도 참조가 가능한 값을 L_Value라고 하며, 그렇지 않은 값을 R_Value라고 한다.

그렇다고해서 상수(1, 2, 3 등)만 R_Value인 것은 아니다.
x++과 같은 R_Value 도 있다.

++X 는 X의 값에 1을 더한 뒤 해당 X를 반환하기 때문에 사실상 X를 의미하기 때문에, 다른 라인에서도 참조할 수 있다.
X++ 은 임시 객체에 X를 저장해두고, X에는 1을 더해준 뒤, 임시 객체에 저장된 X를 반환하기 때문에 다른 라인에서는 참조할 수 없다.

